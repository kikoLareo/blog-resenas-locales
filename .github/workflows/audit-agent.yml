name: 🔍 Automated Audit Agent

on:
  # Run on pull requests
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'app/**'
      - 'components/**'
      - 'lib/**'
      - 'scripts/**'
      - 'package.json'
      - 'package-lock.json'
  
  # Run on pushes to main/develop
  push:
    branches: [ main, develop ]
    paths:
      - 'app/**'
      - 'components/**'
      - 'lib/**'
      - 'scripts/**'
      - 'package.json'
      - 'package-lock.json'
  
  # Allow manual execution
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to audit'
        required: false
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - production

jobs:
  audit:
    name: 🔍 Comprehensive Audit
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: 📦 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: 🔧 Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps chromium
      
      - name: 🔍 Run Automated Audit Agent
        id: audit
        run: |
          npm run audit:full
          echo "audit_status=$?" >> $GITHUB_OUTPUT
        continue-on-error: true
      
      - name: 📄 Upload Audit Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: audit-reports-node-${{ matrix.node-version }}
          path: |
            audit-reports/
            test-results/
          retention-days: 30
      
      - name: 📊 Comment PR with Audit Results
        if: github.event_name == 'pull_request' && matrix.node-version == '20'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Find the latest audit report
            const reportsDir = './audit-reports';
            if (!fs.existsSync(reportsDir)) {
              console.log('No audit reports found');
              return;
            }
            
            const files = fs.readdirSync(reportsDir);
            const markdownFiles = files.filter(f => f.endsWith('.md'));
            
            if (markdownFiles.length === 0) {
              console.log('No markdown reports found');
              return;
            }
            
            // Get the most recent report
            const latestReport = markdownFiles.sort().pop();
            const reportPath = path.join(reportsDir, latestReport);
            const reportContent = fs.readFileSync(reportPath, 'utf8');
            
            // Create comment body
            const comment = `## 🔍 Automated Audit Report
            
            ${reportContent}
            
            ---
            *This audit was automatically generated for PR #${{ github.event.number }} on Node.js ${{ matrix.node-version }}*
            `;
            
            // Post comment
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
      
      - name: ❌ Fail workflow if audit failed
        if: steps.audit.outputs.audit_status != '0'
        run: |
          echo "Audit failed with critical issues"
          exit 1

  # Additional job for E2E testing if audit passes
  e2e-validation:
    name: 🎭 E2E Validation
    runs-on: ubuntu-latest
    needs: audit
    if: success()
    timeout-minutes: 20
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: 🔧 Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps
      
      - name: 🎭 Run E2E Tests
        run: npm run test:e2e
        env:
          CI: true
      
      - name: 📄 Upload E2E Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-results
          path: |
            test-results/
            playwright-report/
          retention-days: 30

  # Performance audit job
  performance-audit:
    name: ⚡ Performance Audit  
    runs-on: ubuntu-latest
    needs: audit
    if: success()
    timeout-minutes: 15
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: 🔧 Install dependencies
        run: npm ci
      
      - name: 🏗️ Build application
        run: npm run build
        env:
          SKIP_BUILD_STATIC_GENERATION: true
      
      - name: ⚡ Run Performance Tests
        run: |
          # Start the application
          npm start &
          sleep 10
          
          # Run performance audit
          npx lighthouse http://localhost:3000 --chrome-flags="--headless --no-sandbox" --output-path=./performance-report.html
        timeout-minutes: 10
      
      - name: 📄 Upload Performance Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-report
          path: performance-report.html
          retention-days: 30