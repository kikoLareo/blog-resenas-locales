name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  setup-and-cache:
    name: Setup Node and Cache
    runs-on: ubuntu-latest
    outputs:
      node-version: ${{ steps.vars.outputs.node_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - id: vars
        name: Expose Node version
        run: echo "node_version=20" >> "$GITHUB_OUTPUT"

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

  type-check:
    name: Type Check
    needs: setup-and-cache
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup-and-cache.outputs.node-version }}
          cache: npm
      - name: Install deps
        run: npm ci --no-audit --no-fund
      - name: Run type-check
        run: npm run type-check

  lint:
    name: Lint
    needs: setup-and-cache
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup-and-cache.outputs.node-version }}
          cache: npm
      - name: Install deps
        run: npm ci --no-audit --no-fund
      - name: Run ESLint
        run: npm run lint

  unit-tests:
    name: Unit Tests
    needs: [type-check, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install deps
        run: npm ci --no-audit --no-fund
      - name: Run unit tests
        run: npm run test -- --run

  build:
    name: Build
    needs: [type-check, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install deps
        run: npm ci --no-audit --no-fund
      - name: Build
        run: npm run build

name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  lint-and-typecheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm i --no-audit --no-fund

      - name: Run ESLint
        run: npm run lint

     # - name: Run TypeScript check
      #  run: npm run type-check

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm i --no-audit --no-fund

      - name: Run unit tests
        run: npm test

  #e2e-tests:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Checkout code
  #      uses: actions/checkout@v4

  #    - name: Setup Node.js
  #      uses: actions/setup-node@v4
  #      with:
  #        node-version: '18'
  #        cache: 'npm'

  #    - name: Install dependencies
  #       run: npm ci

  #    - name: Install Playwright Browsers
  #      run: npx playwright install --with-deps

  #    - name: Run Playwright tests
  #      run: npm run test:e2e
  #      env:
  #        NEXT_PUBLIC_SITE_URL: http://localhost:3000

  #    - name: Upload Playwright Report
  #      uses: actions/upload-artifact@v4
  #      if: failure()
  #      with:
  #        name: playwright-report
  #        path: playwright-report/
  #         retention-days: 30

  build:
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm i --no-audit --no-fund

      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}
          NEXT_PUBLIC_SANITY_DATASET: ${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: .next/
